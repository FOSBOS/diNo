<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAgXSURBVGhDzVhrcFTlGc7mBglgpJ2BhMEwiskPmkEGCMJg
        Cc1MYBgMnUnKmFBp+aFUbUdBR6hYpUKWTTbZJUHx1iKj4rSKpbVDnV60dNqES4BcIAQkINrhlnBNYnbP
        nrPne3zfs2fjkv0S9uxuou/MM7vJ7vd+z3O+9/ZtQjwN2JjIr16vo9Dncxz0eu2K11vhUxTHcUV5aQ3w
        QRKQYDO+/F00ADYhXHN0vRJEXvh8WyCD+ZnQdVenELV5QeHfCQuIqLmmKBWDCpBBUezQ9a20/JWxpqtv
        1/z+rR4Z0UihKFt0IZylpruRN451XXefk5GzChJDJ+NebboeWQPqZnF4yIhFA4+nQgjhzjLdj4xxXtDm
        lnIiEihKpRjRAiCEvUJGZCgoKlWtrtufIOVL94iUaGBfsqo6dRmJQUEi/A1VwNFqiMNOeLUK+fcI1Hd0
        c6vhN8oNS0I8X7xkiOhHUzU8nZuk32VQT2o2txo+o7CyVKkUP1WkpppbhRhiatB76UXpGp/PLszthsc4
        dqn5RZzkquqAtt8RLiIIEuPpkZ+MEK8sMLeNv3FFoTFDk20cBMV4//vukxvkAkKgH6wycijUB4NKsW/Y
        Khg9pR8M3HAgbp563nj1ejcDzZKQkqD7bGBNKDweu5+HTHPr+BqFyi95k6uNK+Azn7zqcxghxO+vnV6H
        G63PGU9YPWCXkpbBf7Cy30cQdLLUU4ZpDhOiroU3ufiPxdDxMi7vexqisRpavQM3Lz0PtNTi+qH16Drw
        tJTwoKAq5lPDe4wQm8vNreNnfMwqxzKNJf/fMx83T/8K6PggjNT1/esjDqlQ9F7ZKBGy7S/m9vEzSrxk
        TavRWcj5vxWis6EE+PzPROJW0vrhQOOziuvtvw4TotIpDUvCcxz74cLFfQ/i6pEy4MxuIuEMIxUNrjQ+
        EyZE06r1uCc8D4pUSfQbpx/DZTqNvq5nA0KOVEqJWUVXw9owIXRdhrl9fI2vqtdP/wJdR1dA6LWUIySk
        iW55EmJW0XUoXAjtRyUY8R0ghdhe4u3bhO4vn8SVlpVGidU++yNwYoeUmFVcbXs2TAhFQPxHFSFqr3Gi
        93auo7FiI1TFAe+xncCpXVJiltDkRM/lF8KEBHrJGykmhdiN5quHgs77b4V0Pe1poEQ/9Z6cnBVwH/HI
        7ypCVMR2a+SyxxBi614ibwyKA3/qubD3KfNEYqtcepMrrLMHIcTrU01K1oy69yghXt0OuPkefcuAaDTE
        kL/PfrQKaH+HKld0vSOI7k83GKNOqO8ghKieYFKLzMwR/UFNcwquFiGnoGvalh56H3aZ6jpOo0j72xQa
        LinBSNGxe5URquzzq5svEgJd3uvdQn0kyoYoxMej+Drb21s9oa9vwxy/3/ER/1wTKiAIVa+C0vwaVa63
        6FTkJG+LZheunVln+PP2bsb59sfRdW4tVK2Sq1b0114Kral8GkEMJD8QSk8FtLbfA21vyokOhePbaGJe
        b/g5e+DnaPvnT9BR/7AhhP/HOWnSsm58lKpaaelOrnTb4T1SBxyj05ERNiGa3RSGNRCEvvpNaH+jHMf/
        Xop/uWeg/q35aHy/CMc+/nF/ZeTZLuYRhWq4fyDhoaApldBaSUzLNqkIxqk/rMLvfpqEHStHYdejd+K9
        1d/DnueysXdzLj6pnYGOBmq0IT4pZztMOtEbsHM0jdG7KNF1nkJDN5CBYxotLny553F66vTkJUJEixtf
        7F6Nzv/8Bv+rWog/PXU39m2/HxdOrKGK6AzzSfeRQpNObMZzTqCXuOffLl80FtJKcxeFzcm3V+Crerrq
        chiRAI3uJyd2lEEnIaHC1EOBdTJ//PtWXCbfQDneeZEa4pVIkl7zk5C2kLAiEV66m/Ttt1NuDFKe2+qg
        qXIhQjjqTCqxG4vRNDf3EOlmXJa5I3d3O/CuqxjCYmO8cZhOS9sa5ldVq2jGivPPphxelHQfUpfvT37u
        8Jq2HWPHpiIvbzoeeeRRONcvlZIdDOKIE6kpSXjiiceQlnYn7rlnPG31Gk8Tw3MHMc3orm73QycnThyH
        BQsKUFZWhtLSUgMlJSUoyr9bSngwcL7k58+5xUd5eRn5/hEyMjJ6abtKAp9KzCeTmJWVlT569Oh15Fgs
        W7bMX1xcjMEwYcJES/f1q41VWL58udQXY+nSpfy5npOTg5SUlEvEZ3qAlgVLTU1dSw7EkiVLsGjRoogw
        47774G+MfApes3IBioqKpL5kWLx4Mb/yyHImwHJos5H6c4WFhSgoKLCEhQsLgAs0qkhID4T/UBUyMydK
        /USC8ePHa8w1QFliNpvtxNy5czFv3jzLeOCB+TQARhZaggTz92V+IgU9cC4K0sn4rtmzZ4uZM2ciWiz7
        Ya6U+EBse6EUtJfUR6TIz89nMT8zufdbYlpamsjLy6NyGj2SkxIp4YfOEy67389Il663ismTJ/N0/E33
        nzVrVvq0adMEV4hYMGbsHdTFh/65VG91I+fee6XrrSI3N5dPZaUpw8iNv2ZnZyNW5ORMhX5y8OmX0frv
        32LKlCnS9dFgzJgxfCpG4iePGzfOn5mZSZUkNkyaNAkXaLaSCQjirqwM6dpowXsmJyffz0ISqJzpBC5r
        MWOHvVwqwAANkikpqdJ1sSApKamHm99/6Xj4iOKCedOz5SIIGoUdnb50XSxIT0835rMkyhFWFRckJiYa
        DU8m5OHi2dI1sYI0nGUhbDYicJ5eOXFigs2WIOhuLsRRl6C7Ob1nuITe5DI+k62JBXQILyckJNi+BhqL
        nnF3sDOcAAAAAElFTkSuQmCC
</value>
  </data>
</root>